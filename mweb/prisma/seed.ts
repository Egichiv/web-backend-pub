import { PrismaClient, Genre } from '@prisma/client';
import * as bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  const hashedPassword = await bcrypt.hash('password123', 10);

  const users = await Promise.all([
    prisma.user.create({
      data: {
        nickname: 'admin',
        password: hashedPassword,
      },
    }),
    prisma.user.create({
      data: {
        nickname: 'johnDoe',
        password: hashedPassword,
      },
    }),
    prisma.user.create({
      data: {
        nickname: 'mememaster',
        password: hashedPassword,
      },
    }),
    prisma.user.create({
      data: {
        nickname: 'quotelover',
        password: hashedPassword,
      },
    }),
    prisma.user.create({
      data: {
        nickname: 'blogger',
        password: hashedPassword,
      },
    }),
    prisma.user.create({
      data: {
        nickname: 'commenter',
        password: hashedPassword,
      },
    }),
  ]);

  const posts = await Promise.all([
    prisma.post.create({
      data: {
        heading: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–ª–æ–≥!',
        text: '–≠—Ç–æ –ø–µ—Ä–≤—ã–π –ø–æ—Å—Ç –≤ –Ω–∞—à–µ–º –Ω–æ–≤–æ–º –±–ª–æ–≥–µ. –ó–¥–µ—Å—å –º—ã –±—É–¥–µ–º –¥–µ–ª–∏—Ç—å—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –º—ã—Å–ª—è–º–∏, —Ü–∏—Ç–∞—Ç–∞–º–∏ –∏ –º–µ–º–∞–º–∏.',
        userId: users[0].id, // admin
      },
    }),
    prisma.post.create({
      data: {
        heading: '–û –≤–∞–∂–Ω–æ—Å—Ç–∏ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è',
        text: '–ü–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à—É –∂–∏–∑–Ω—å. –í —ç—Ç–æ–º –ø–æ—Å—Ç–µ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –∫ –∂–∏–∑–Ω–∏.',
        userId: users[4].id, // blogger
      },
    }),
    prisma.post.create({
      data: {
        heading: '–¢–æ–ø-10 –ª—É—á—à–∏—Ö —Ü–∏—Ç–∞—Ç –æ –∂–∏–∑–Ω–∏',
        text: '–°–æ–±—Ä–∞–ª–∏ –¥–ª—è –≤–∞—Å —Å–∞–º—ã–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–µ —Ü–∏—Ç–∞—Ç—ã –æ –∂–∏–∑–Ω–∏ –æ—Ç –≤–µ–ª–∏–∫–∏—Ö –ª—é–¥–µ–π. –ö–∞–∂–¥–∞—è –∏–∑ –Ω–∏—Ö –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –≤–∞—à–∏–º –¥–µ–≤–∏–∑–æ–º.',
        userId: users[3].id, // quotelover
      },
    }),
    prisma.post.create({
      data: {
        heading: '–ö–∞–∫ —é–º–æ—Ä –ø–æ–º–æ–≥–∞–µ—Ç –≤ —Ç—Ä—É–¥–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö',
        text: '–Æ–º–æ—Ä - —ç—Ç–æ –º–æ—â–Ω–æ–µ –æ—Ä—É–∂–∏–µ –ø—Ä–æ—Ç–∏–≤ —Å—Ç—Ä–µ—Å—Å–∞ –∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö —ç–º–æ—Ü–∏–π. –†–∞—Å—Å–∫–∞–∂–µ–º, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–º–µ—Ö –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏.',
        userId: users[2].id, // mememaster
      },
    }),
    prisma.post.create({
      data: {
        heading: '–ú–µ–º—ã –∫–∞–∫ –Ω–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –∏—Å–∫—É—Å—Å—Ç–≤–∞',
        text: '–í —ç–ø–æ—Ö—É –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –º–µ–º—ã —Å—Ç–∞–ª–∏ –Ω–µ–æ—Ç—ä–µ–º–ª–µ–º–æ–π —á–∞—Å—Ç—å—é –∫—É–ª—å—Ç—É—Ä—ã. –≠—Ç–æ –Ω–æ–≤—ã–π —è–∑—ã–∫ –æ–±—â–µ–Ω–∏—è –∏ —Å–ø–æ—Å–æ–± –≤—ã—Ä–∞–∂–µ–Ω–∏—è –º—ã—Å–ª–µ–π.',
        userId: users[2].id, // mememaster
      },
    }),
  ]);

  const quotes = await Promise.all([
    prisma.quote.create({
      data: {
        author: '–ê–ª—å–±–µ—Ä—Ç –≠–π–Ω—à—Ç–µ–π–Ω',
        text: '–õ–æ–≥–∏–∫–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –≤–∞—Å –æ—Ç –ø—É–Ω–∫—Ç–∞ –ê –∫ –ø—É–Ω–∫—Ç—É –ë, –∞ –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî –∫—É–¥–∞ —É–≥–æ–¥–Ω–æ.',
        genre: Genre.SMART,
        userId: users[0].id,
        uploadedAt: new Date('2024-01-15'),
      },
    }),
    prisma.quote.create({
      data: {
        author: '–£–æ–ª—Ç –î–∏—Å–Ω–µ–π',
        text: '–í—Å–µ –≤–∞—à–∏ –º–µ—á—Ç—ã –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å—é, –µ—Å–ª–∏ —É –≤–∞—Å —Ö–≤–∞—Ç–∏—Ç —Å–º–µ–ª–æ—Å—Ç–∏ –∏—Ö –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞—Ç—å.',
        genre: Genre.MOTIVATING,
        userId: users[1].id,
        uploadedAt: new Date('2024-01-16'),
      },
    }),
    prisma.quote.create({
      data: {
        author: '–°—Ç–∏–≤ –î–∂–æ–±—Å',
        text: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –æ—Ç–ª–∏—á–∞—é—Ç –ª–∏–¥–µ—Ä–∞ –æ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è.',
        genre: Genre.SMART,
        userId: users[3].id,
        uploadedAt: new Date('2024-01-17'),
      },
    }),
    prisma.quote.create({
      data: {
        author: '–ú–∞—Ä–∫ –¢–≤–µ–Ω',
        text: '–î–æ–±—Ä–æ—Ç–∞ ‚Äî —ç—Ç–æ —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π –≥–ª—É—Ö–æ–π –º–æ–∂–µ—Ç —É—Å–ª—ã—à–∞—Ç—å, –∞ —Å–ª–µ–ø–æ–π –º–æ–∂–µ—Ç —É–≤–∏–¥–µ—Ç—å.',
        genre: Genre.SMART,
        userId: users[2].id,
        uploadedAt: new Date('2024-01-18'),
      },
    }),
    prisma.quote.create({
      data: {
        author: '–ö–æ–Ω—Ñ—É—Ü–∏–π',
        text: '–ù–µ –≤–∞–∂–Ω–æ, –Ω–∞—Å–∫–æ–ª—å–∫–æ –º–µ–¥–ª–µ–Ω–Ω–æ –≤—ã –∏–¥—ë—Ç–µ, –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –≤—ã –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç–µ—Å—å.',
        genre: Genre.MOTIVATING,
        userId: users[4].id,
        uploadedAt: new Date('2024-01-19'),
      },
    }),
    prisma.quote.create({
      data: {
        author: '–û—Å–∫–∞—Ä –£–∞–π–ª—å–¥',
        text: '–û–ø—ã—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º—ã –¥–∞—ë–º —Å–≤–æ–∏–º –æ—à–∏–±–∫–∞–º.',
        genre: Genre.REALISTIC,
        userId: users[0].id,
        uploadedAt: new Date('2024-01-20'),
      },
    }),
    prisma.quote.create({
      data: {
        author: '–ì—Ä–∞—É—á–æ –ú–∞—Ä–∫—Å',
        text: '–ó–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Å–æ–±–∞–∫–∏ –∫–Ω–∏–≥–∞ ‚Äî –ª—É—á—à–∏–π –¥—Ä—É–≥ —á–µ–ª–æ–≤–µ–∫–∞. –í–Ω—É—Ç—Ä–∏ —Å–æ–±–∞–∫–∏ —á–∏—Ç–∞—Ç—å —Å–ª–∏—à–∫–æ–º —Ç–µ–º–Ω–æ.',
        genre: Genre.FUNNY,
        userId: users[2].id,
        uploadedAt: new Date('2024-01-21'),
      },
    }),
    prisma.quote.create({
      data: {
        author: '–í–∏–Ω—Å—Ç–æ–Ω –ß–µ—Ä—á–∏–ª–ª—å',
        text: '–£—Å–ø–µ—Ö ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –æ—Ç –æ–¥–Ω–æ–π –Ω–µ—É–¥–∞—á–∏ –∫ –¥—Ä—É–≥–æ–π, –Ω–µ —Ç–µ—Ä—è—è —ç–Ω—Ç—É–∑–∏–∞–∑–º–∞.',
        genre: Genre.MOTIVATING,
        userId: users[1].id,
        uploadedAt: new Date('2024-01-22'),
      },
    }),
    prisma.quote.create({
      data: {
        author: '–í—É–¥–∏ –ê–ª–ª–µ–Ω',
        text: '–î–µ–Ω—å–≥–∏ –ª—É—á—à–µ –±–µ–¥–Ω–æ—Å—Ç–∏, –µ—Å–ª–∏ –Ω–µ –ø–æ –¥—Ä—É–≥–∏–º –ø—Ä–∏—á–∏–Ω–∞–º, —Ç–æ —Ö–æ—Ç—è –±—ã –ø–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º.',
        genre: Genre.FUNNY,
        userId: users[5].id,
        uploadedAt: new Date('2024-01-23'),
      },
    }),
    prisma.quote.create({
      data: {
        author: '–ì–µ–Ω—Ä–∏ –§–æ—Ä–¥',
        text: '–ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è ‚Äî —ç—Ç–æ —Ç–µ —Å—Ç—Ä–∞—à–Ω—ã–µ –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –≤–∏–¥–∏—Ç–µ, –∫–æ–≥–¥–∞ –æ—Ç–≤–æ–¥–∏—Ç–µ –≥–ª–∞–∑–∞ –æ—Ç —Å–≤–æ–µ–π —Ü–µ–ª–∏.',
        genre: Genre.REALISTIC,
        userId: users[3].id,
        uploadedAt: new Date('2024-01-24'),
      },
    }),
  ]);

  const memes = await Promise.all([
    prisma.meme.create({
      data: {
        link: 'https://i.imgur.com/example1.jpg',
        userId: users[2].id,
      },
    }),
    prisma.meme.create({
      data: {
        link: 'https://i.imgur.com/example2.jpg',
        userId: users[1].id,
      },
    }),
    prisma.meme.create({
      data: {
        link: 'https://i.imgur.com/example3.jpg',
        userId: users[2].id,
      },
    }),
    prisma.meme.create({
      data: {
        link: 'https://i.imgur.com/example4.jpg',
        userId: users[4].id,
      },
    }),
    prisma.meme.create({
      data: {
        link: 'https://i.imgur.com/example5.jpg',
        userId: users[0].id,
      },
    }),
    prisma.meme.create({
      data: {
        link: 'https://i.imgur.com/example6.jpg',
        userId: users[5].id,
      },
    }),
    prisma.meme.create({
      data: {
        link: 'https://i.imgur.com/example7.jpg',
        userId: users[2].id,
      },
    }),
    prisma.meme.create({
      data: {
        link: 'https://i.imgur.com/example8.jpg',
        userId: users[3].id,
      },
    }),
  ]);

  const comments = await Promise.all([
    prisma.comment.create({
      data: {
        text: '–û—Ç–ª–∏—á–Ω—ã–π –ø–æ—Å—Ç! –û—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.',
        userId: users[1].id,
        createdAt: new Date('2024-01-16T10:30:00Z'),
      },
    }),
    prisma.comment.create({
      data: {
        text: '–°–æ–≥–ª–∞—Å–µ–Ω —Å –∞–≤—Ç–æ—Ä–æ–º. –ü–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!',
        userId: users[2].id,
        createdAt: new Date('2024-01-16T11:15:00Z'),
      },
    }),
    prisma.comment.create({
      data: {
        text: '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –ø–æ–¥–±–æ—Ä–∫–∞ —Ü–∏—Ç–∞—Ç. –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ü–∏—Ç–∞—Ç–∞ –≠–π–Ω—à—Ç–µ–π–Ω–∞.',
        userId: users[3].id,
        createdAt: new Date('2024-01-17T09:45:00Z'),
      },
    }),
    prisma.comment.create({
      data: {
        text: '–•aha, –º–µ–º—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—Ç–∞–ª–∏ —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∫—É–ª—å—Ç—É—Ä—ã üòÑ',
        userId: users[4].id,
        createdAt: new Date('2024-01-17T14:20:00Z'),
      },
    }),
    prisma.comment.create({
      data: {
        text: '–°–ø–∞—Å–∏–±–æ –∑–∞ –º–æ—Ç–∏–≤–∞—Ü–∏—é! –ö–∞–∫ —Ä–∞–∑ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –±—ã–ª–æ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å.',
        userId: users[5].id,
        createdAt: new Date('2024-01-18T08:00:00Z'),
      },
    }),
    prisma.comment.create({
      data: {
        text: '–Æ–º–æ—Ä - —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª—É—á—à–µ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –æ—Ç —Å—Ç—Ä–µ—Å—Å–∞.',
        userId: users[0].id,
        createdAt: new Date('2024-01-18T16:30:00Z'),
      },
    }),
    prisma.comment.create({
      data: {
        text: '–î–æ–±–∞–≤–ª—é —ç—Ç–æ—Ç –±–ª–æ–≥ –≤ –∑–∞–∫–ª–∞–¥–∫–∏. –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç!',
        userId: users[1].id,
        createdAt: new Date('2024-01-19T12:45:00Z'),
      },
    }),
    prisma.comment.create({
      data: {
        text: '–ë—ã–ª–æ –±—ã –∑–¥–æ—Ä–æ–≤–æ —É–≤–∏–¥–µ—Ç—å –±–æ–ª—å—à–µ —Å—Ç–∞—Ç–µ–π –Ω–∞ —Ç–µ–º—É —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è.',
        userId: users[4].id,
        createdAt: new Date('2024-01-19T15:10:00Z'),
      },
    }),
    prisma.comment.create({
      data: {
        text: '–¶–∏—Ç–∞—Ç–∞ –ú–∞—Ä–∫–∞ –¢–≤–µ–Ω–∞ –ø—Ä–æ—Å—Ç–æ –∑–æ–ª–æ—Ç–∞—è! –û—á–µ–Ω—å –≥–ª—É–±–æ–∫–∞—è –º—ã—Å–ª—å.',
        userId: users[2].id,
        createdAt: new Date('2024-01-20T11:30:00Z'),
      },
    }),
    prisma.comment.create({
      data: {
        text: '–ñ–¥—ë–º –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤!',
        userId: users[5].id,
        createdAt: new Date('2024-01-20T18:45:00Z'),
      },
    }),
  ]);

  console.log('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!');
  console.log(`–°–æ–∑–¥–∞–Ω–æ: ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
  console.log(`–°–æ–∑–¥–∞–Ω–æ: ${posts.length} –ø–æ—Å—Ç–æ–≤`);
  console.log(`–°–æ–∑–¥–∞–Ω–æ: ${quotes.length} —Ü–∏—Ç–∞—Ç`);
  console.log(`–°–æ–∑–¥–∞–Ω–æ: ${memes.length} –º–µ–º–æ–≤`);
  console.log(`–°–æ–∑–¥–∞–Ω–æ: ${comments.length} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤`);

  console.log('\n–¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã (–ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö: password123):');
  console.log('admin');
  console.log('johnDoe');
  console.log('mememaster');
  console.log('quotelover');
  console.log('blogger');
  console.log('commenter');
}

main()
  .catch((e) => {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });