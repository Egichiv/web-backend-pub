<div class="reviews-admin">
  <h1>Управление отзывами</h1>

  <!-- Кнопка добавления -->
  <div class="actions">
    <a href="/reviews-admin/add" class="btn btn-primary">Добавить отзыв</a>
  </div>

  <!-- Статистика (обновляется через SSE) -->
  <div class="stats">
    <div class="stat-card">
      <h3>Всего отзывов</h3>
      <p id="totalReviews">{{reviews.length}}</p>
    </div>
    <div class="stat-card">
      <h3>Средняя оценка</h3>
      <p id="averageRating">0.0</p>
    </div>
    <div class="stat-card">
      <h3>Последний отзыв</h3>
      <p id="lastReviewTime">-</p>
    </div>
  </div>

  <!-- Уведомления -->
  <div id="notifications"></div>

  <!-- Список отзывов -->
  <div class="reviews-list">
    <h2>Список отзывов</h2>
    <table>
      <thead>
      <tr>
        <th>ID</th>
        <th>Пользователь</th>
        <th>Манга</th>
        <th>Оценка</th>
        <th>Комментарий</th>
        <th>Дата</th>
        <th>Действия</th>
      </tr>
      </thead>
      <tbody>
      {{#each reviews}}
        <tr>
          <td>{{id}}</td>
          <td>{{userName}}</td>
          <td>{{mangaTitle}}</td>
          <td>{{rating}} ⭐</td>
          <td>{{comment}}</td>
          <td>{{createdAt}}</td>
          <td>
            <a href="/reviews-admin/{{id}}/edit" class="btn btn-sm">Изменить</a>
            <form method="post" action="/reviews-admin/{{id}}/delete" style="display: inline;">
              <button type="submit" class="btn btn-sm btn-danger"
                      onclick="return confirm('Удалить отзыв?')">Удалить</button>
            </form>
          </td>
        </tr>
      {{/each}}
      </tbody>
    </table>
  </div>
</div>

<style>
  .reviews-admin {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }

  .actions {
    margin: 20px 0;
  }

  .stats {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 20px;
    margin: 20px 0;
  }

  .stat-card {
    background: #f8f9fa;
    padding: 20px;
    border-radius: 8px;
    text-align: center;
    border: 2px solid #e9ecef;
  }

  .stat-card h3 {
    margin: 0 0 10px 0;
    color: #495057;
  }

  .stat-card p {
    font-size: 24px;
    font-weight: bold;
    margin: 0;
    color: #007bff;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin: 20px 0;
  }

  th, td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid #dee2e6;
  }

  th {
    background: #f8f9fa;
    font-weight: 600;
  }

  .btn {
    padding: 8px 16px;
    background: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    border: none;
    cursor: pointer;
    margin-right: 5px;
  }

  .btn:hover {
    background: #0056b3;
  }

  .btn-sm {
    padding: 4px 8px;
    font-size: 12px;
  }

  .btn-danger {
    background: #dc3545;
  }

  .btn-danger:hover {
    background: #c82333;
  }

  .btn-primary {
    background: #28a745;
  }

  #notifications {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 1000;
  }

  .notification {
    background: #d4edda;
    color: #155724;
    padding: 10px 15px;
    border-radius: 4px;
    margin-bottom: 10px;
    border: 1px solid #c3e6cb;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const eventSource = new EventSource('/reviews-admin/events');

    eventSource.onmessage = function(event) {
      try {
        const data = JSON.parse(event.data);

        if (data.type === 'review_update') {
          // Обновляем статистику
          document.getElementById('totalReviews').textContent = data.stats.total;
          document.getElementById('averageRating').textContent = data.stats.averageRating;

          if (data.lastReview) {
            const date = new Date(data.lastReview.createdAt);
            document.getElementById('lastReviewTime').textContent = date.toLocaleTimeString('ru-RU');
          }

          // Показываем уведомление
          showNotification('Данные обновлены: ' + new Date().toLocaleTimeString('ru-RU'));
        }
      } catch (error) {
        console.error('Ошибка обработки SSE:', error);
      }
    };

    eventSource.onerror = function(error) {
      console.error('Ошибка SSE соединения:', error);
      showNotification('Ошибка соединения с сервером', 'error');
    };
  });

  function showNotification(message, type = 'success') {
    const container = document.getElementById('notifications');

    if (!container) {
      console.error('Элемент notifications не найден');
      return;
    }

    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.textContent = message;

    if (type === 'error') {
      notification.style.background = '#f8d7da';
      notification.style.color = '#721c24';
      notification.style.borderColor = '#f5c6cb';
    }

    container.appendChild(notification);

    setTimeout(() => {
      if (notification.parentElement) {
        notification.remove();
      }
    }, 3000);
  }
</script>